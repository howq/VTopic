<?xml version="1.0" encoding="UTF-8"?>
<!-- Reference Manual http://logback.qos.ch/manual/index.html -->

<!-- <configuration scan="true" scanPeriod="300 seconds" > -->
<configuration>
    <include resource="logbackConfig.xml" />
    <property name="log.base.default" value="/home/h/logs" />

    <!-- app.home should be defined in logbackConfig.xml -->
    <property name="log.base" value="${app.home:-${log.base.default}}" />
    <jmxConfigurator />
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date [%thread] %-5level %logger{80} -%M-%L-%msg %n </pattern>
        </encoder>
    </appender>

    <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
    <appender name="logfile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}.log</File>

        <!-- 每天产生一个日志文件，最多 10 个 <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.base}.%d{yyyy-MM-dd}.%i.zip</fileNamePattern> <maxHistory>30</maxHistory>
            </rollingPolicy> -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.base}.%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 30MB -->
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
    <!-- 用于记录错误日志 -->
    <appender name="errorlogfile"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${log.base}-Error.log</File>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${log.base}-Error.%d{yyyy-MM-dd}.%i.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 30MB -->
                <maxFileSize>30MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 需要记录日志的包 -->
    <!-- 项目自定义 -->
    <logger name="com.ihowq.VTopic" level="DEBUG" />
    <logger name="com.ihowq.VTopic.controllor" level="DEBUG" />
    <logger name="com.ihowq.VTopic.service" level="DEBUG" />
    <logger name="com.ihowq.VTopic.dao" level="DEBUG" />
    <logger name="com.ihowq.VTopic.util" level="DEBUG" />
    <!-- Tomcat用 -->
    <logger name="org.apache.catalina" level="INFO" />
    <!-- spring用 -->
    <logger name="org.springframework" level="INFO" />
    <logger
            name="org.springframework.web.context.request.RequestContextListener"
            level="WARN" />
    <!-- JDBC用 -->
    <logger name="java.sql.Connection" level="DEBUG" />
    <logger name="java.sql.Statement" level="INFO" />
    <logger name="java.sql.PreparedStatement" level="INFO" />
    <logger name="java.sql.ResultSet" level="INFO" />
    <root>
        <level value="INFO" />
        <appender-ref ref="stdout" />
        <appender-ref ref="logfile" />
        <appender-ref ref="errorlogfile" />
    </root>
</configuration>